shiny::runApp()
library(shiny)
library(tidyverse)
library(lubridate)
library (DT)
library(googledrive)
library(googlesheets4)
options(gargle_oauth_cache = ".secrets")
gargle::gargle_oauth_cache()
drive_auth()
list.files(".secrets/")
options(
gargle_oauth_cache = ".secrets",
gargle_oauth_email = TRUE
)
drive_auth()
sheets_auth(token = drive_token())
mydrive<-drive_find(type = "spreadsheet")
mydrive
id<-mydrive[1,2]
id
dati<-read_sheet(id$id)
View(dati)
runApp()
install.packages("shinythemes")
library(shinythemes)
runApp()
runApp()
runApp()
shiny::runGitHub("shiny-examples", "rstudio", subdir = "001-hello")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinyjs")
runApp()
library(shiny)
ui <- fluidPage(
navbarPage("Sales Dashboard", id ="sales_tab",
tabPanel("Panel_1", "Test Panel", value = 1),
tabPanel("Open Sales Gsheet", "Open Sales Gsheet", value = 2,
uiOutput("Link"))
))
server <- function(input, output, session) {
output$Link <- renderUI({
a("test", href="http://google.com", target="_blank")
})}
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
navbarPage("Sales Dashboard", id ="sales_tab",
tabPanel("Panel_1", "Test Panel", value = 1),
tabPanel(a("Open Sales Gsheet", href="http://google.com", target="_blank"))
))
server <- function(input, output, session) {}
shinyApp(ui = ui, server = server)
remove(shinyjs)
runApp()
runApp()
runApp()
runApp()
library(shiny)
ui <- fluidPage(
tags$a(href="#try", class="btn btn-default", "Jump"),
div(style = htmltools::css(height = "5000px")),
uiOutput("try")
)
server <- function(input, output, session) {
output$try <- renderUI("hello")
}
shinyApp(ui, server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library(shinythemes)
runApp()
runApp()
runApp()
runApp()
runApp()
ui<-
fluidPage(theme = shinytheme("cerulean"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
